{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/node_modules/react-native-web/src/exports/TouchableOpacity/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport createReactClass from 'create-react-class';\nimport ensurePositiveDelayProps from \"../Touchable/ensurePositiveDelayProps\";\nimport { number } from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport Touchable from \"../Touchable\";\nimport TouchableWithoutFeedback from \"../TouchableWithoutFeedback\";\nimport View from \"../View\";\nvar flattenStyle = StyleSheet.flatten;\nvar PRESS_RETENTION_OFFSET = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 30\n};\nvar TouchableOpacity = createReactClass({\n  displayName: 'TouchableOpacity',\n  mixins: [Touchable.Mixin],\n  propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {\n    activeOpacity: number,\n    focusedOpacity: number\n  }),\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeOpacity: 0.2,\n      focusedOpacity: 0.7\n    };\n  },\n  getInitialState: function getInitialState() {\n    return this.touchableGetInitialState();\n  },\n  componentDidMount: function componentDidMount() {\n    ensurePositiveDelayProps(this.props);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n  },\n  setOpacityTo: function setOpacityTo(value, duration) {\n    this.setNativeProps({\n      style: {\n        opacity: value,\n        transitionDuration: duration ? duration / 1000 + \"s\" : '0s'\n      }\n    });\n  },\n  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n    if (e.dispatchConfig.registrationName === 'onResponderGrant') {\n      this._opacityActive(0);\n    } else {\n      this._opacityActive(150);\n    }\n\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n    this._opacityInactive(250);\n\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n  touchableHandlePress: function touchableHandlePress(e) {\n    this.props.onPress && this.props.onPress(e);\n  },\n  touchableHandleLongPress: function touchableHandleLongPress(e) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n  touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n  touchableGetHitSlop: function touchableGetHitSlop() {\n    return this.props.hitSlop;\n  },\n  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n    return this.props.delayPressIn || 0;\n  },\n  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;\n  },\n  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n    return this.props.delayPressOut;\n  },\n  _opacityActive: function _opacityActive(duration) {\n    this.setOpacityTo(this.props.activeOpacity, duration);\n  },\n  _opacityInactive: function _opacityInactive(duration) {\n    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  },\n  _opacityFocused: function _opacityFocused() {\n    this.setOpacityTo(this.props.focusedOpacity);\n  },\n  _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {\n    var childStyle = flattenStyle(this.props.style) || {};\n    return childStyle.opacity === undefined ? 1 : childStyle.opacity;\n  },\n  render: function render() {\n    var _this$props = this.props,\n        activeOpacity = _this$props.activeOpacity,\n        focusedOpacity = _this$props.focusedOpacity,\n        delayLongPress = _this$props.delayLongPress,\n        delayPressIn = _this$props.delayPressIn,\n        delayPressOut = _this$props.delayPressOut,\n        onLongPress = _this$props.onLongPress,\n        onPress = _this$props.onPress,\n        onPressIn = _this$props.onPressIn,\n        onPressOut = _this$props.onPressOut,\n        pressRetentionOffset = _this$props.pressRetentionOffset,\n        other = _objectWithoutProperties(_this$props, [\"activeOpacity\", \"focusedOpacity\", \"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"pressRetentionOffset\"]);\n\n    return React.createElement(View, _extends({}, other, {\n      accessible: this.props.accessible !== false,\n      onKeyDown: this.touchableHandleKeyEvent,\n      onKeyUp: this.touchableHandleKeyEvent,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      style: [styles.root, !this.props.disabled && styles.actionable, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }), this.props.children, Touchable.renderDebugView({\n      color: 'blue',\n      hitSlop: this.props.hitSlop\n    }));\n  }\n});\nvar styles = StyleSheet.create({\n  root: {\n    transitionProperty: 'opacity',\n    transitionDuration: '0.15s',\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nexport default applyNativeMethods(TouchableOpacity);","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/node_modules/react-native-web/src/exports/TouchableOpacity/index.js"],"names":["applyNativeMethods","createReactClass","ensurePositiveDelayProps","number","React","StyleSheet","Touchable","TouchableWithoutFeedback","View","flattenStyle","flatten","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableOpacity","displayName","mixins","Mixin","propTypes","activeOpacity","focusedOpacity","getDefaultProps","getInitialState","touchableGetInitialState","componentDidMount","props","componentWillReceiveProps","nextProps","setOpacityTo","value","duration","setNativeProps","style","opacity","transitionDuration","touchableHandleActivePressIn","e","dispatchConfig","registrationName","_opacityActive","onPressIn","touchableHandleActivePressOut","_opacityInactive","onPressOut","touchableHandlePress","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut","_getChildStyleOpacityWithDefault","_opacityFocused","childStyle","undefined","render","other","accessible","touchableHandleKeyEvent","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableHandleResponderTerminationRequest","touchableHandleStartShouldSetResponder","styles","root","disabled","actionable","children","renderDebugView","color","create","transitionProperty","userSelect","cursor","touchAction"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport createReactClass from 'create-react-class';\nimport ensurePositiveDelayProps from '../Touchable/ensurePositiveDelayProps';\nimport { number } from 'prop-types';\nimport React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport Touchable from '../Touchable';\nimport TouchableWithoutFeedback from '../TouchableWithoutFeedback';\nimport View from '../View';\n\nconst flattenStyle = StyleSheet.flatten;\n\ntype Event = Object;\n\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in a View, which is\n * added to the view hiearchy. Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n */\n\n/* eslint-disable react/prefer-es6-class */\nconst TouchableOpacity = createReactClass({\n  displayName: 'TouchableOpacity',\n  mixins: [Touchable.Mixin],\n\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active.\n     */\n    activeOpacity: number,\n    focusedOpacity: number\n  },\n\n  getDefaultProps: function() {\n    return {\n      activeOpacity: 0.2,\n      focusedOpacity: 0.7\n    };\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  setOpacityTo: function(value: number, duration: ?number) {\n    this.setNativeProps({\n      style: {\n        opacity: value,\n        transitionDuration: duration ? `${duration / 1000}s` : '0s'\n      }\n    });\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: Event) {\n    if (e.dispatchConfig.registrationName === 'onResponderGrant') {\n      this._opacityActive(0);\n    } else {\n      this._opacityActive(150);\n    }\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    this._opacityInactive(250);\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: Event) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _opacityActive: function(duration: number) {\n    this.setOpacityTo(this.props.activeOpacity, duration);\n  },\n\n  _opacityInactive: function(duration: number) {\n    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  },\n\n  _opacityFocused: function() {\n    this.setOpacityTo(this.props.focusedOpacity);\n  },\n\n  _getChildStyleOpacityWithDefault: function() {\n    const childStyle = flattenStyle(this.props.style) || {};\n    return childStyle.opacity === undefined ? 1 : childStyle.opacity;\n  },\n\n  render: function() {\n    const {\n      /* eslint-disable */\n      activeOpacity,\n      focusedOpacity,\n      delayLongPress,\n      delayPressIn,\n      delayPressOut,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      pressRetentionOffset,\n      /* eslint-enable */\n      ...other\n    } = this.props;\n\n    return (\n      <View\n        {...other}\n        accessible={this.props.accessible !== false}\n        onKeyDown={this.touchableHandleKeyEvent}\n        onKeyUp={this.touchableHandleKeyEvent}\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}\n        onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        style={[styles.root, !this.props.disabled && styles.actionable, this.props.style]}\n      >\n        {this.props.children}\n        {Touchable.renderDebugView({ color: 'blue', hitSlop: this.props.hitSlop })}\n      </View>\n    );\n  }\n});\n\nconst styles = StyleSheet.create({\n  root: {\n    transitionProperty: 'opacity',\n    transitionDuration: '0.15s',\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\n\nexport default applyNativeMethods(TouchableOpacity);\n"]},"metadata":{},"sourceType":"module"}
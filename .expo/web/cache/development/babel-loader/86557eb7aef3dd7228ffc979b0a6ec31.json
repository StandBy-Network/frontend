{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/node_modules/@react-navigation/drawer/src/views/ResourceSavingScene.tsx\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Screen, screensEnabled } from 'react-native-screens';\nvar FAR_FAR_AWAY = 30000;\n\nvar ResourceSavingScene = function (_React$Component) {\n  _inherits(ResourceSavingScene, _React$Component);\n\n  var _super = _createSuper(ResourceSavingScene);\n\n  function ResourceSavingScene() {\n    _classCallCheck(this, ResourceSavingScene);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceSavingScene, [{\n    key: \"render\",\n    value: function render() {\n      if ((screensEnabled == null ? void 0 : screensEnabled()) && Platform.OS !== 'web') {\n        var _this$props = this.props,\n            _isVisible = _this$props.isVisible,\n            _rest = _objectWithoutProperties(_this$props, [\"isVisible\"]);\n\n        return React.createElement(Screen, _extends({\n          active: _isVisible ? 1 : 0\n        }, _rest, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 14\n          }\n        }));\n      }\n\n      var _this$props2 = this.props,\n          isVisible = _this$props2.isVisible,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          rest = _objectWithoutProperties(_this$props2, [\"isVisible\", \"children\", \"style\"]);\n\n      return React.createElement(View, _extends({\n        style: [styles.container, Platform.OS === 'web' ? {\n          display: isVisible ? 'flex' : 'none'\n        } : null, style],\n        collapsable: false,\n        removeClippedSubviews: Platform.OS === 'ios' ? !isVisible : true,\n        pointerEvents: isVisible ? 'auto' : 'none'\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: isVisible ? styles.attached : styles.detached,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, children));\n    }\n  }]);\n\n  return ResourceSavingScene;\n}(React.Component);\n\nexport { ResourceSavingScene as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/node_modules/@react-navigation/drawer/src/views/ResourceSavingScene.tsx"],"names":["React","Screen","screensEnabled","FAR_FAR_AWAY","ResourceSavingScene","Platform","OS","props","isVisible","rest","children","style","styles","container","display","attached","detached","Component","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,sBAAvC;AAQA,IAAMC,YAAY,GAAG,KAArB;;IAEqBC,mB;;;;;;;;;;;;;6BACV;AAEP,UAAI,CAAAF,cAAc,QAAd,YAAAA,cAAc,OAAQG,QAAQ,CAACC,EAAT,KAAgB,KAA1C,EAAiD;AAAA,0BAChB,KAAKC,KADW;AAAA,YACvCC,UADuC,eACvCA,SADuC;AAAA,YACzBC,KADyB;;AAI/C,eAAO,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAED,UAAS,GAAG,CAAH,GAAO;AAAhC,WAAuCC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AAPM,yBASyC,KAAKF,KAT9C;AAAA,UASCC,SATD,gBASCA,SATD;AAAA,UASYE,QATZ,gBASYA,QATZ;AAAA,UASsBC,KATtB,gBASsBA,KATtB;AAAA,UASgCF,IAThC;;AAWP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLG,MAAM,CAACC,SADF,EAELR,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACI;AAAEQ,UAAAA,OAAO,EAAEN,SAAS,GAAG,MAAH,GAAY;AAAhC,SADJ,GAEI,IAJC,EAKLG,KALK,CADT;AAQE,QAAA,WAAW,EAAE,KARf;AASE,QAAA,qBAAqB,EAGnBN,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAACE,SAAzB,GAAqC,IAZzC;AAcE,QAAA,aAAa,EAAEA,SAAS,GAAG,MAAH,GAAY;AAdtC,SAeMC,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,SAAS,GAAGI,MAAM,CAACG,QAAV,GAAqBH,MAAM,CAACI,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,QADH,CAjBF,CADF;AAuBD;;;;EAnC8CV,KAAK,CAACiB,S;;SAAlCb,mB;AAsCrB,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BN,EAAAA,QAAQ,EAAE;AACRK,IAAAA,IAAI,EAAE;AADE,GALqB;AAQ/BJ,EAAAA,QAAQ,EAAE;AACRI,IAAAA,IAAI,EAAE,CADE;AAERE,IAAAA,GAAG,EAAEnB;AAFG;AARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-unresolved\nimport { Screen, screensEnabled } from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  style?: any;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component<Props> {\n  render() {\n    // react-native-screens is buggy on web\n    if (screensEnabled?.() && Platform.OS !== 'web') {\n      const { isVisible, ...rest } = this.props;\n\n      // @ts-ignore\n      return <Screen active={isVisible ? 1 : 0} {...rest} />;\n    }\n\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          Platform.OS === 'web'\n            ? { display: isVisible ? 'flex' : 'none' }\n            : null,\n          style,\n        ]}\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
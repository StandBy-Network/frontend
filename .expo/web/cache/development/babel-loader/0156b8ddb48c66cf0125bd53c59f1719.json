{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/app/routes/Routes.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport SignInScreen from \"../screens/singIn/SignInScreen\";\nimport { ForgotPasswordScreen } from \"../screens/singIn/ForgotPasswordScreen\";\nimport { PasswordSentScreen } from \"../screens/singIn/PasswordSentScreen\";\nimport { Main } from \"../screens/Main\";\nimport { Container } from \"../components/Container\";\nimport ActivityIndicator from \"react-native-web/src/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AuthContext } from \"./AuthProvider\";\nimport Header from \"../components/Header\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nexport var Routes = function Routes() {\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      login = _useContext.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"user\").then(function (userString) {\n      if (userString) {\n        login();\n      }\n\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(Header, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 47\n          }\n        }));\n      },\n      headerStyle: {\n        backgroundColor: '#F5F5F5'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignInScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ForgotPassword\",\n    component: ForgotPasswordScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PasswordSent\",\n    component: PasswordSentScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })));\n};","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/app/routes/Routes.js"],"names":["React","useState","useEffect","useContext","createStackNavigator","createDrawerNavigator","NavigationContainer","SignInScreen","ForgotPasswordScreen","PasswordSentScreen","Main","Container","ActivityIndicator","AuthContext","Header","Stack","Drawer","Routes","user","login","loading","setLoading","AsyncStorage","getItem","then","userString","catch","err","console","log","headerTitle","props","headerStyle","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,YAAP;AACA,SAAQC,oBAAR;AACA,SAAQC,kBAAR;AACA,SAAQC,IAAR;AACA,SAAQC,SAAR;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;;AAEA,SAAQC,WAAR;AACA,OAAOC,MAAP;AACA,IAAMC,KAAK,GAAGX,oBAAoB,EAAlC;AAEA,IAAMY,MAAM,GAAGX,qBAAqB,EAApC;AAEA,OAAO,IAAMY,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,oBACFd,UAAU,CAACU,WAAD,CADR;AAAA,MACjBK,IADiB,eACjBA,IADiB;AAAA,MACXC,KADW,eACXA,KADW;;AAAA,kBAEMlB,QAAQ,CAAC,IAAD,CAFd;AAAA;AAAA,MAEjBmB,OAFiB;AAAA,MAERC,UAFQ;;AAIxBnB,EAAAA,SAAS,CAAC,YAAM;AACZoB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EACKC,IADL,CACU,UAAAC,UAAU,EAAI;AAChB,UAAGA,UAAH,EAAe;AACXN,QAAAA,KAAK;AACR;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KANL,EAOKK,KAPL,CAOW,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGP,OAAH,EAAY;AACR,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcQ,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,aAAa,EAAE;AACXU,MAAAA,WAAW,EAAE,qBAAAC,KAAK;AAAA,eAAI,oBAAC,MAAD,eAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADP;AAEXC,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR;AAFF,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAE1B,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,SAAS,EAAEC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEC,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAdR,CADJ;AAgCH,CAzDM","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport SignInScreen from \"../screens/singIn/SignInScreen\";\nimport {ForgotPasswordScreen} from \"../screens/singIn/ForgotPasswordScreen\";\nimport {PasswordSentScreen} from \"../screens/singIn/PasswordSentScreen\";\nimport {Main} from \"../screens/Main\";\nimport {Container} from \"../components/Container\";\nimport ActivityIndicator from \"react-native-web/src/exports/ActivityIndicator\";\nimport {AsyncStorage} from \"react-native-web\";\nimport {AuthContext} from \"./AuthProvider\";\nimport Header from \"../components/Header\";\nconst Stack = createStackNavigator();\n\nconst Drawer = createDrawerNavigator();\n\nexport const Routes = () => {\n    const {user, login} = useContext(AuthContext);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        AsyncStorage.getItem(\"user\")\n            .then(userString => {\n                if(userString) {\n                    login();\n                }\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    if(loading) {\n        return (\n            <Container>\n                <ActivityIndicator size=\"large\"/>\n            </Container>\n        );\n    }\n\n    return (\n        <NavigationContainer>\n\n            {/*    {user ?\n                <Stack.Navigator\n                    screenOptions={{\n                        headerTitle: \"SEGÍTSNEKEM - ASSIST\",\n                        headerStyle: {\n                            backgroundColor: '#F5F5F5',\n                        },\n                    }}\n                >\n                    <Stack.Screen name=\"Main\" component={Main} />\n                </Stack.Navigator>\n            ) : (   */}\n                <Stack.Navigator\n                    screenOptions={{\n                        headerTitle: props => <Header {...props} />,\n                        headerStyle: {\n                            backgroundColor: '#F5F5F5',\n                        },\n                    }}\n                >\n                    <Stack.Screen name='SignIn' component={SignInScreen}/>\n                    <Stack.Screen name='ForgotPassword' component={ForgotPasswordScreen}/>\n                    <Stack.Screen name=\"PasswordSent\" component={PasswordSentScreen} />\n                    <Stack.Screen name=\"Main\" component={Main} />\n                </Stack.Navigator>\n            {/*      )} */}\n\n        </NavigationContainer>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createReactClass from 'create-react-class';\nimport EdgeInsetsPropType from \"../EdgeInsetsPropType\";\nimport ensurePositiveDelayProps from \"../Touchable/ensurePositiveDelayProps\";\nimport React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport TimerMixin from 'react-timer-mixin';\nimport Touchable from \"../Touchable\";\nimport ViewPropTypes from \"../ViewPropTypes\";\nimport warning from 'fbjs/lib/warning';\nimport { any, bool, func, number, string } from 'prop-types';\nvar PRESS_RETENTION_OFFSET = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 30\n};\nvar TouchableWithoutFeedback = createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [TimerMixin, Touchable.Mixin],\n  propTypes: {\n    accessibilityComponentType: ViewPropTypes.accessibilityComponentType,\n    accessibilityLabel: string,\n    accessibilityRole: ViewPropTypes.accessibilityRole,\n    accessibilityTraits: ViewPropTypes.accessibilityTraits,\n    accessible: bool,\n    children: any,\n    delayLongPress: number,\n    delayPressIn: number,\n    delayPressOut: number,\n    disabled: bool,\n    hitSlop: EdgeInsetsPropType,\n    onLayout: func,\n    onLongPress: func,\n    onPress: func,\n    onPressIn: func,\n    onPressOut: func,\n    pressRetentionOffset: EdgeInsetsPropType,\n    testID: string\n  },\n  getInitialState: function getInitialState() {\n    return this.touchableGetInitialState();\n  },\n  componentDidMount: function componentDidMount() {\n    ensurePositiveDelayProps(this.props);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n  },\n  touchableHandlePress: function touchableHandlePress(e) {\n    this.props.onPress && this.props.onPress(e);\n  },\n  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n  touchableHandleLongPress: function touchableHandleLongPress(e) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n  touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n  touchableGetHitSlop: function touchableGetHitSlop() {\n    return this.props.hitSlop;\n  },\n  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n    return this.props.delayPressIn || 0;\n  },\n  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;\n  },\n  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n    return this.props.delayPressOut || 0;\n  },\n  render: function render() {\n    var _this$props = this.props,\n        delayLongPress = _this$props.delayLongPress,\n        delayPressIn = _this$props.delayPressIn,\n        delayPressOut = _this$props.delayPressOut,\n        onLongPress = _this$props.onLongPress,\n        onPress = _this$props.onPress,\n        onPressIn = _this$props.onPressIn,\n        onPressOut = _this$props.onPressOut,\n        pressRetentionOffset = _this$props.pressRetentionOffset,\n        other = _objectWithoutProperties(_this$props, [\"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"pressRetentionOffset\"]);\n\n    var child = React.Children.only(this.props.children);\n    var children = child.props.children;\n    warning(!child.type || child.type.displayName !== 'Text', 'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' + (child._owner && child._owner.getName && child._owner.getName() || '<unknown>'));\n\n    if (process.env.NODE_ENV !== 'production' && Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'View') {\n      children = React.Children.toArray(children);\n      children.push(Touchable.renderDebugView({\n        color: 'red',\n        hitSlop: this.props.hitSlop\n      }));\n    }\n\n    var style = Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text' ? [!this.props.disabled && styles.actionable, child.props.style, {\n      color: 'red'\n    }] : [!this.props.disabled && styles.actionable, child.props.style];\n    return React.cloneElement(child, _objectSpread({}, other, {\n      accessible: this.props.accessible !== false,\n      children: children,\n      onKeyDown: this.touchableHandleKeyEvent,\n      onKeyUp: this.touchableHandleKeyEvent,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      style: style\n    }));\n  }\n});\nvar styles = StyleSheet.create({\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nexport default TouchableWithoutFeedback;","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/node_modules/react-native-web/src/exports/TouchableWithoutFeedback/index.js"],"names":["createReactClass","EdgeInsetsPropType","ensurePositiveDelayProps","React","StyleSheet","TimerMixin","Touchable","ViewPropTypes","warning","any","bool","func","number","string","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableWithoutFeedback","displayName","mixins","Mixin","propTypes","accessibilityComponentType","accessibilityLabel","accessibilityRole","accessibilityTraits","accessible","children","delayLongPress","delayPressIn","delayPressOut","disabled","hitSlop","onLayout","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset","testID","getInitialState","touchableGetInitialState","componentDidMount","props","componentWillReceiveProps","nextProps","touchableHandlePress","e","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","touchableGetPressOutDelayMS","render","other","child","Children","only","type","_owner","getName","process","env","NODE_ENV","TOUCH_TARGET_DEBUG","toArray","push","renderDebugView","color","style","styles","actionable","cloneElement","onKeyDown","touchableHandleKeyEvent","onKeyUp","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","create","cursor","touchAction"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport createReactClass from 'create-react-class';\nimport EdgeInsetsPropType from '../EdgeInsetsPropType';\nimport ensurePositiveDelayProps from '../Touchable/ensurePositiveDelayProps';\nimport React, { type Element } from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TimerMixin from 'react-timer-mixin';\nimport Touchable from '../Touchable';\nimport ViewPropTypes from '../ViewPropTypes';\nimport warning from 'fbjs/lib/warning';\nimport { any, bool, func, number, string } from 'prop-types';\n\ntype Event = Object;\n\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n\n/**\n * Do not use unless you have a very good reason. All elements that\n * respond to press should have a visual feedback when touched.\n *\n * TouchableWithoutFeedback supports only one child.\n * If you wish to have several child components, wrap them in a View.\n */\n\n/* eslint-disable react/prefer-es6-class, react/prop-types */\nconst TouchableWithoutFeedback = createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [TimerMixin, Touchable.Mixin],\n\n  propTypes: {\n    accessibilityComponentType: ViewPropTypes.accessibilityComponentType,\n    accessibilityLabel: string,\n    accessibilityRole: ViewPropTypes.accessibilityRole,\n    accessibilityTraits: ViewPropTypes.accessibilityTraits,\n    accessible: bool,\n    children: any,\n    /**\n     * Delay in ms, from onPressIn, before onLongPress is called.\n     */\n    delayLongPress: number,\n    /**\n     * Delay in ms, from the start of the touch, before onPressIn is called.\n     */\n    delayPressIn: number,\n    /**\n     * Delay in ms, from the release of the touch, before onPressOut is called.\n     */\n    delayPressOut: number,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: bool,\n    /**\n     * This defines how far your touch can start away from the button. This is\n     * added to `pressRetentionOffset` when moving off of the button.\n     */\n    // $FlowFixMe(>=0.41.0)\n    hitSlop: EdgeInsetsPropType,\n    /**\n     * Invoked on mount and layout changes with\n     *\n     *   `{nativeEvent: {layout: {x, y, width, height}}}`\n     */\n    onLayout: func,\n    onLongPress: func,\n    /**\n     * Called when the touch is released, but not if cancelled (e.g. by a scroll\n     * that steals the responder lock).\n     */\n    onPress: func,\n    onPressIn: func,\n    onPressOut: func,\n    /**\n     * When the scroll view is disabled, this defines how far your touch may\n     * move off of the button, before deactivating the button. Once deactivated,\n     * try moving it back and you'll see that the button is once again\n     * reactivated! Move it back and forth several times while the scroll view\n     * is disabled. Ensure you pass in a constant to reduce memory allocations.\n     */\n    // $FlowFixMe\n    pressRetentionOffset: EdgeInsetsPropType,\n    testID: string\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  componentWillReceiveProps: function(nextProps: Object) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandlePress: function(e: Event) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: Event) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function(): typeof PRESS_RETENTION_OFFSET {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function(): ?Object {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function(): number {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function(): number {\n    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function(): number {\n    return this.props.delayPressOut || 0;\n  },\n\n  render: function(): Element<any> {\n    const {\n      /* eslint-disable */\n      delayLongPress,\n      delayPressIn,\n      delayPressOut,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      pressRetentionOffset,\n      /* eslint-enable */\n      ...other\n    } = this.props;\n\n    // Note(avik): remove dynamic typecast once Flow has been upgraded\n    // $FlowFixMe\n    const child = React.Children.only(this.props.children);\n    let children = child.props.children;\n    warning(\n      !child.type || child.type.displayName !== 'Text',\n      'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' +\n        ((child._owner && child._owner.getName && child._owner.getName()) || '<unknown>')\n    );\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      Touchable.TOUCH_TARGET_DEBUG &&\n      child.type &&\n      child.type.displayName === 'View'\n    ) {\n      children = React.Children.toArray(children);\n      children.push(Touchable.renderDebugView({ color: 'red', hitSlop: this.props.hitSlop }));\n    }\n    const style =\n      Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text'\n        ? [!this.props.disabled && styles.actionable, child.props.style, { color: 'red' }]\n        : [!this.props.disabled && styles.actionable, child.props.style];\n    return (React: any).cloneElement(child, {\n      ...other,\n      accessible: this.props.accessible !== false,\n      children,\n      onKeyDown: this.touchableHandleKeyEvent,\n      onKeyUp: this.touchableHandleKeyEvent,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      style\n    });\n  }\n});\n\nconst styles = StyleSheet.create({\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\n\nexport default TouchableWithoutFeedback;\n"]},"metadata":{},"sourceType":"module"}
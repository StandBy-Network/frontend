{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/node_modules/react-native-web/src/exports/ActivityIndicator/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nimport ViewPropTypes from \"../ViewPropTypes\";\nimport { bool, number, oneOf, oneOfType, string } from 'prop-types';\nimport React, { Component } from 'react';\n\nvar createSvgCircle = function createSvgCircle(style) {\n  return React.createElement(\"circle\", {\n    cx: \"16\",\n    cy: \"16\",\n    fill: \"none\",\n    r: \"14\",\n    strokeWidth: \"4\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  });\n};\n\nvar ActivityIndicator = function (_Component) {\n  _inherits(ActivityIndicator, _Component);\n\n  var _super = _createSuper(ActivityIndicator);\n\n  function ActivityIndicator() {\n    _classCallCheck(this, ActivityIndicator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ActivityIndicator, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          animating = _this$props.animating,\n          color = _this$props.color,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          size = _this$props.size,\n          style = _this$props.style,\n          other = _objectWithoutProperties(_this$props, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\"]);\n\n      var svg = React.createElement(\"svg\", {\n        height: \"100%\",\n        viewBox: \"0 0 32 32\",\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, createSvgCircle({\n        stroke: color,\n        opacity: 0.2\n      }), createSvgCircle({\n        stroke: color,\n        strokeDasharray: 80,\n        strokeDashoffset: 60\n      }));\n      return React.createElement(View, _extends({}, other, {\n        accessibilityRole: \"progressbar\",\n        \"aria-valuemax\": \"1\",\n        \"aria-valuemin\": \"0\",\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        children: svg,\n        style: [typeof size === 'number' ? {\n          height: size,\n          width: size\n        } : indicatorSizes[size], styles.animation, !animating && styles.animationPause, !animating && hidesWhenStopped && styles.hidesWhenStopped],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ActivityIndicator;\n}(Component);\n\nActivityIndicator.displayName = 'ActivityIndicator';\nActivityIndicator.propTypes = _objectSpread({}, ViewPropTypes, {\n  animating: bool,\n  color: string,\n  hidesWhenStopped: bool,\n  size: oneOfType([oneOf(['small', 'large']), number])\n});\nActivityIndicator.defaultProps = {\n  animating: true,\n  color: '#1976D2',\n  hidesWhenStopped: true,\n  size: 'small'\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hidesWhenStopped: {\n    visibility: 'hidden'\n  },\n  animation: {\n    animationDuration: '0.75s',\n    animationKeyframes: [{\n      '0%': {\n        transform: [{\n          rotate: '0deg'\n        }]\n      },\n      '100%': {\n        transform: [{\n          rotate: '360deg'\n        }]\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  },\n  animationPause: {\n    animationPlayState: 'paused'\n  }\n});\nvar indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\nexport default applyNativeMethods(ActivityIndicator);","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/node_modules/react-native-web/src/exports/ActivityIndicator/index.js"],"names":["applyNativeMethods","StyleSheet","View","ViewPropTypes","bool","number","oneOf","oneOfType","string","React","Component","createSvgCircle","style","ActivityIndicator","props","animating","color","hidesWhenStopped","size","other","svg","stroke","opacity","strokeDasharray","strokeDashoffset","styles","container","height","width","indicatorSizes","animation","animationPause","displayName","propTypes","defaultProps","create","alignItems","justifyContent","visibility","animationDuration","animationKeyframes","transform","rotate","animationTimingFunction","animationIterationCount","animationPlayState","small","large"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { bool, number, oneOf, oneOfType, string } from 'prop-types';\nimport React, { Component } from 'react';\n\nconst createSvgCircle = style => (\n  <circle cx=\"16\" cy=\"16\" fill=\"none\" r=\"14\" strokeWidth=\"4\" style={style} />\n);\n\nclass ActivityIndicator extends Component<*> {\n  static displayName = 'ActivityIndicator';\n\n  static propTypes = {\n    ...ViewPropTypes,\n    animating: bool,\n    color: string,\n    hidesWhenStopped: bool,\n    size: oneOfType([oneOf(['small', 'large']), number])\n  };\n\n  static defaultProps = {\n    animating: true,\n    color: '#1976D2',\n    hidesWhenStopped: true,\n    size: 'small'\n  };\n\n  render() {\n    const { animating, color, hidesWhenStopped, size, style, ...other } = this.props;\n\n    const svg = (\n      <svg height=\"100%\" viewBox=\"0 0 32 32\" width=\"100%\">\n        {createSvgCircle({\n          stroke: color,\n          opacity: 0.2\n        })}\n        {createSvgCircle({\n          stroke: color,\n          strokeDasharray: 80,\n          strokeDashoffset: 60\n        })}\n      </svg>\n    );\n\n    return (\n      <View\n        {...other}\n        accessibilityRole=\"progressbar\"\n        aria-valuemax=\"1\"\n        aria-valuemin=\"0\"\n        style={[styles.container, style]}\n      >\n        <View\n          children={svg}\n          style={[\n            typeof size === 'number' ? { height: size, width: size } : indicatorSizes[size],\n            styles.animation,\n            !animating && styles.animationPause,\n            !animating && hidesWhenStopped && styles.hidesWhenStopped\n          ]}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hidesWhenStopped: {\n    visibility: 'hidden'\n  },\n  animation: {\n    animationDuration: '0.75s',\n    animationKeyframes: [\n      {\n        '0%': { transform: [{ rotate: '0deg' }] },\n        '100%': { transform: [{ rotate: '360deg' }] }\n      }\n    ],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  },\n  animationPause: {\n    animationPlayState: 'paused'\n  }\n});\n\nconst indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\n\nexport default applyNativeMethods(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}
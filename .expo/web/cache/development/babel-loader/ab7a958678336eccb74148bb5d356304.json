{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/app/screens/singIn/SignInScreen.js\";\nimport React, { useContext } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport FlatButton from \"../../components/Button\";\nimport { globalStyles } from \"../../styles/globalStyles\";\nimport { Container } from \"../../components/Container\";\nimport TextLink from \"../../components/TextLink\";\nimport { AuthContext } from \"../../routes/AuthProvider\";\nimport I18t from \"../../translations\";\nvar loginSchema = yup.object({\n  name: yup.string().required(I18t.t('SignIn.usernameError')),\n  password: yup.string().required(I18t.t('SignIn.passwordError'))\n});\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: globalStyles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, I18t.t('SignIn.header'))), React.createElement(View, {\n    style: globalStyles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      password: ''\n    },\n    validationSchema: loginSchema,\n    onSubmit: function onSubmit(values, actions) {\n      actions.resetForm();\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, React.createElement(TextInput, {\n      style: globalStyles.textinput,\n      placeholder: \"Felhaszn\\xE1l\\xF3n\\xE9v\",\n      value: props.values.name,\n      onChangeText: props.handleChange('name'),\n      onBlur: props.handleBlur('name'),\n      underlineColorAndroid: 'transparent',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, props.touched.name && props.errors.name), React.createElement(TextInput, {\n      style: globalStyles.textinput,\n      placeholder: \"Jelsz\\xF3\",\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      onBlur: props.handleBlur('password'),\n      underlineColorAndroid: 'transparent',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, props.touched.password && props.errors.password), React.createElement(FlatButton, {\n      text: \"Mehet\",\n      onPress: function onPress() {\n        login();\n      },\n      style: globalStyles.actionButtonCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }), React.createElement(TextLink, {\n      text: \"Elfelejtett jelsz\\xF3\",\n      onPress: function onPress() {\n        navigation.navigate(\"ForgotPassword\");\n      },\n      style: globalStyles.reversButtonCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }));\n  })))));\n}","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/app/screens/singIn/SignInScreen.js"],"names":["React","useContext","Formik","yup","FlatButton","globalStyles","Container","TextLink","AuthContext","I18t","loginSchema","object","name","string","required","t","password","SignInScreen","navigation","login","Keyboard","dismiss","header","form","values","actions","resetForm","console","log","props","textinput","handleChange","handleBlur","errorText","touched","errors","actionButtonCenter","navigate","reversButtonCenter"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {Keyboard, Text, TextInput, TouchableWithoutFeedback, View} from 'react-native';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport FlatButton from \"../../components/Button\";\nimport {globalStyles} from \"../../styles/globalStyles\";\nimport {Container} from \"../../components/Container\";\nimport TextLink from \"../../components/TextLink\";\nimport {AuthContext} from \"../../routes/AuthProvider\";\nimport I18t from '../../translations';\n\nconst loginSchema = yup.object({\n    name: yup.string()\n        .required(I18t.t('SignIn.usernameError')),\n    password: yup.string()\n        .required(I18t.t('SignIn.passwordError'))\n\n});\n\nexport default function SignInScreen({ navigation }) {\n    const {login} = useContext(AuthContext);\n    return (\n        <Container>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <View>\n                    <View>\n                        <Text style={globalStyles.header}>{I18t.t('SignIn.header')}</Text>\n                    </View>\n                    <View style={globalStyles.form}>\n                        <Formik\n                            initialValues={{ name: '', password: '' }}\n                            validationSchema={loginSchema}\n                            onSubmit={(values, actions) => {\n                                actions.resetForm();\n                                console.log(values);\n                            }}>\n                            {(props) => (\n                                <View>\n                                    <TextInput style={globalStyles.textinput}\n                                               placeholder=\"Felhasználónév\"\n                                               value={props.values.name}\n                                               onChangeText={props.handleChange('name')}\n                                               onBlur={props.handleBlur('name')}\n                                               underlineColorAndroid={'transparent'} />\n                                    <Text style={globalStyles.errorText} >{props.touched.name && props.errors.name}</Text>\n                                    <TextInput style={globalStyles.textinput}\n                                               placeholder=\"Jelszó\"\n                                               value={props.values.password}\n                                               onChangeText={props.handleChange('password')}\n                                               onBlur={props.handleBlur('password')}\n                                               underlineColorAndroid={'transparent'} />\n                                    <Text style={globalStyles.errorText} >{props.touched.password && props.errors.password}</Text>\n                                    <FlatButton text=\"Mehet\" onPress={() => {\n                                      //  props.handleSubmit;\n                                        login();\n                                      //  navigation.navigate(\"Main\")\n                                    }} style={globalStyles.actionButtonCenter}/>\n                                    <TextLink text=\"Elfelejtett jelszó\" onPress={() => {\n                                        navigation.navigate(\"ForgotPassword\")\n                                    }} style={globalStyles.reversButtonCenter}/>\n                                </View>\n                            )}\n                        </Formik>\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
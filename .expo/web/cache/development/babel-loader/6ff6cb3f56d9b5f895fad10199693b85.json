{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/app/routes/Routes.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport SignInScreen from \"../screens/singIn/SignInScreen\";\nimport { ForgotPasswordScreen } from \"../screens/singIn/ForgotPasswordScreen\";\nimport { PasswordSentScreen } from \"../screens/singIn/PasswordSentScreen\";\nimport { Main } from \"../screens/Main\";\nimport { Container } from \"../components/Container\";\nimport ActivityIndicator from \"react-native-web/src/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AuthContext } from \"./AuthProvider\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nexport var Routes = function Routes() {\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      login = _useContext.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"user\").then(function (userString) {\n      if (userString) {\n        login();\n      }\n\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/app/routes/Routes.js"],"names":["React","useState","useEffect","useContext","createStackNavigator","createDrawerNavigator","NavigationContainer","SignInScreen","ForgotPasswordScreen","PasswordSentScreen","Main","Container","ActivityIndicator","AuthContext","Stack","Drawer","Routes","user","login","loading","setLoading","AsyncStorage","getItem","then","userString","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,YAAP;AACA,SAAQC,oBAAR;AACA,SAAQC,kBAAR;AACA,SAAQC,IAAR;AACA,SAAQC,SAAR;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;;AAEA,SAAQC,WAAR;AAEA,IAAMC,KAAK,GAAGV,oBAAoB,EAAlC;AAEA,IAAMW,MAAM,GAAGV,qBAAqB,EAApC;AAEA,OAAO,IAAMW,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,oBACFb,UAAU,CAACU,WAAD,CADR;AAAA,MACjBI,IADiB,eACjBA,IADiB;AAAA,MACXC,KADW,eACXA,KADW;;AAAA,kBAEMjB,QAAQ,CAAC,IAAD,CAFd;AAAA;AAAA,MAEjBkB,OAFiB;AAAA,MAERC,UAFQ;;AAIxBlB,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EACKC,IADL,CACU,UAAAC,UAAU,EAAI;AAChB,UAAGA,UAAH,EAAe;AACXN,QAAAA,KAAK;AACR;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KANL,EAOKK,KAPL,CAOW,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGP,OAAH,EAAY;AACR,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAkCH,CA3DM","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport SignInScreen from \"../screens/singIn/SignInScreen\";\nimport {ForgotPasswordScreen} from \"../screens/singIn/ForgotPasswordScreen\";\nimport {PasswordSentScreen} from \"../screens/singIn/PasswordSentScreen\";\nimport {Main} from \"../screens/Main\";\nimport {Container} from \"../components/Container\";\nimport ActivityIndicator from \"react-native-web/src/exports/ActivityIndicator\";\nimport {AsyncStorage} from \"react-native-web\";\nimport {AuthContext} from \"./AuthProvider\";\n\nconst Stack = createStackNavigator();\n\nconst Drawer = createDrawerNavigator();\n\nexport const Routes = () => {\n    const {user, login} = useContext(AuthContext);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        AsyncStorage.getItem(\"user\")\n            .then(userString => {\n                if(userString) {\n                    login();\n                }\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    if(loading) {\n        return (\n            <Container>\n                <ActivityIndicator size=\"large\"/>\n            </Container>\n        );\n    }\n\n    return (\n        <NavigationContainer>\n            <Drawer.Navigator>\n                \n            </Drawer.Navigator>\n            {/*    {user ? (\n                <Stack.Navigator\n                    screenOptions={{\n                        headerTitle: \"SEGÍTSNEKEM - ASSIST\",\n                        headerStyle: {\n                            backgroundColor: '#F5F5F5',\n                        },\n                    }}\n                >\n                    <Stack.Screen name=\"Main\" component={Main} />\n                </Stack.Navigator>\n            ) : (\n                <Stack.Navigator\n                    screenOptions={{\n                        headerTitle: \"SEGÍTSNEKEM - ASSIST\",\n                        headerStyle: {\n                            backgroundColor: '#F5F5F5',\n                        },\n                    }}\n                >\n                    <Stack.Screen name='SignIn' component={SignInScreen}/>\n                    <Stack.Screen name='ForgotPassword' component={ForgotPasswordScreen}/>\n                    <Stack.Screen name=\"PasswordSent\" component={PasswordSentScreen} />\n                    <Stack.Screen name=\"Main\" component={Main} />\n                </Stack.Navigator>\n            )}\n            */}\n        </NavigationContainer>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documents/StandByAssist/frontend/app/routes/Routes.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Login } from \"../screens/Login\";\nimport Regform from \"../screens/Regform\";\nimport { Container } from \"../components/Container\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AuthContext } from \"./AuthProvider\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar Stack = createStackNavigator();\nexport default function Routes() {\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      login = _useContext.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"user\").then(function (useString) {\n      if (useString) {\n        login();\n      }\n\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, user ? React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }\n  }, \"exists\")) : React.createElement(Stack.Navigator, {\n    initialRouteName: \"Regform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Regform\",\n    component: Regform,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/home/user/Documents/StandByAssist/frontend/app/routes/Routes.js"],"names":["React","useState","useEffect","useContext","createStackNavigator","NavigationContainer","Login","Regform","Container","ActivityIndicator","AuthContext","Stack","Routes","user","login","loading","setLoading","AsyncStorage","getItem","then","useString","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,KAAR;AACA,OAAOC,OAAP;AACA,SAAQC,SAAR;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;;AAEA,SAAQC,WAAR;;AAIA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AAEA,eAAe,SAASQ,MAAT,GAAkB;AAAA,oBACLT,UAAU,CAACO,WAAD,CADL;AAAA,MACrBG,IADqB,eACrBA,IADqB;AAAA,MACfC,KADe,eACfA,KADe;;AAAA,kBAECb,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,MAEtBc,OAFsB;AAAA,MAEbC,UAFa;;AAI7Bd,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EACKC,IADL,CACU,UAAAC,SAAS,EAAI;AACf,UAAIA,SAAJ,EAAe;AACXN,QAAAA,KAAK;AACR;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KANL,EAOKK,KAPL,CAOW,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAVL;AAWH,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAGD,OAAH,EAAY;AACR,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,GACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX,CADH,GAGD,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEP,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJR,CADJ;AAaH","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport {Login} from \"../screens/Login\";\nimport Regform from \"../screens/Regform\";\nimport {Container} from \"../components/Container\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport {AsyncStorage} from \"react-native-web\";\nimport {AuthContext} from \"./AuthProvider\";\nimport {Text} from \"react-native\";\n\n\nconst Stack = createStackNavigator();\n\nexport default function Routes() {\n    const { user, login } = useContext(AuthContext);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        AsyncStorage.getItem(\"user\")\n            .then(useString => {\n                if (useString) {\n                    login();\n                }\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setLoading(false);\n            })\n    }, []);\n\n    if(loading) {\n        return (\n            <Container>\n                <ActivityIndicator size=\"large\"/>\n            </Container>\n        )\n    }\n\n    return (\n        <NavigationContainer >\n            {user ? (\n                    <Container><Text>exists</Text></Container>\n                ) : (\n                <Stack.Navigator initialRouteName=\"Regform\">\n                    <Stack.Screen name=\"Login\" component={Login}/>\n                    <Stack.Screen name=\"Regform\" component={Regform}/>\n                </Stack.Navigator>\n                )}\n        </NavigationContainer>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}